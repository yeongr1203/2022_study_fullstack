<?php

    function swap_val($n1,$n2)
    {
        $temp = $n1;
        $n1 = $n2;
        $n2 = $temp;
        // 함수호출안에서만 값의 자리가 변동.
    }
    // 호출한 함수 안이 아니기 때문에 변동되지 않음.

    function swap_ref(&$n1, &$n2)       //ref= reference : 참조값 /  참조값(주소값=메모리)
                                        // 
    {
        $temp = $n1;
        $n1 = $n2;
        $n2 = $temp;
    }
    // 값에 접근하는것이 아니라 값의 주소값(메모리)에 접근하여 값을 변경하므로 
    // 함수안에 호출 값
    // 주소값은 시작값, 예) 8바이트,8바이트 
    // 늘어나도 8바이트만 복사되어 사용되므로 메모리 사용이 적다. 즉, 메모리 효율성이 좋다.
    // 작업이 다 끝나면 이것 역시 사라지기는 함.

    $a = 10;
    $b = 30;

    print "a: $a, b: $b <br>";
    swap_val($a,$b);
    print "a: $a, b: $b <br>" ; // 호출한 함수 안이 아니기 때문에 변동되지 않음.
    print "----------- <br>";
    print "a: $a, b: $b <br>";
    swap_ref($a,$b);            // 레퍼런스는 메모리주소값을 주는 것.
    print "a: $a, b: $b <br>" ; // 파라미터의 주소값에 접근을 해서 수정해서 나타내주는 것.

    // 함수는 호출하기 전까지는 없는것과 마찬가지. 호출되는 순간 할당된다.
 

    // reference 설명. // 값과 들고있는 사람이 있다고 가정하에,
    // 값(선풍기), 사람1 = 레퍼런스는 값보다 사람이 더 중요함. 사람을 통해서 값에 접근하는것.
    //


















?>